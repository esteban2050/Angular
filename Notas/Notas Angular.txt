Componentes.
Una aplicaciones de angular esta debe estar basada en muchso compoenentes (pequeñas clases que cumplen tarea especifica), como la barra lateral, menu de navegacion.....etc
en otras palabras : son clases normales que tienen un decorador especifico

Directivas estructurales.
Son instrucciones que agregan, eliminan o reemplazan elementos HTML en el template.
por ejemplo: 
- *ngIf = "True", "False", se encarga de mostrar o ocultar elementos HTML en la apgina web
- *ngfor = Se encarga de hacer repeticion de elementos HTML en nuestra pagina (las filas de una tabla)

carpeta e2e: Es lo que contiene todo lo relacionado con las pruebas 

carpeta node_modules:  es una carpeta de paquetes que ayudan a objetivos o fines de desarrollo; hay un script que se corre cuando la app va subirse a produccion, que borra todo lo que no es 
necesario para su uso; es decir, solamente deja lo necesario para que pueda correr, lo que hace que la aplicacion sea menos pesada.
Cuando se va subir el proyecto a un repositorio, no se debe subir la carpeta "node_modules", y ya cuando la transfieran o se pase a otra persona, solo se debe 
correr el comando /* npm install */ para recuperar la carpeta "node_modules".

comando para generar un nuevo componente, como el ejemplo de header, body, footer... junto con sus archivos .spect, .ts, .html y .css
	
		- "ng g c nombrecomponente"
		o si se va generar en una ruta especifica:
		- "ng g c carpeta/carpeta2/nombrecomponente"

Nota, si no se desea agregar el archivo de estilos ".css", se le agrega a la sentencia "-is"
ejemplo:
- ng g c carpeta/carpeta2/nombrecomponente -is

Estilos:
*cuando a un boton se le pone una clase tipo btn-block, significa que use todo el espacio de ancho que tiene
*para dar efecto a los link del navbar, para que puedan aparecer blancos como seleccionados, se le debe agregar a todos los <li> de la lista, el atributo :  routerLinkActive="active"
ejemplo:

<li class="nav-item" routerLinkActive="active">
     <a class="nav-link" [routerLink]="['home']">Home</a>
</li>

Rutas: para poder colocar las rutas a donde quiero navegar por las diferentes opciones, solo se debe crear un archivo app.routes.ts,
el cual lleva importado los diferentes componentes a los que quiero acceder.. en el ejemplo de la aplicacion de comics, esta la pagina home, heroes, about.
ejemplo de como seria la clase de rutas : 

import {RouterModule, Routes} from '@angular/router';
import { HomeComponent } from './components/home/home.component';
import { HeroesComponent } from './components/heroes/heroes.component';
import { AboutComponent } from './components/about/about.component';

const APP_ROUTES: Routes = [
    { path: 'home', component: HomeComponent },
    { path: 'heroes', component: HeroesComponent },
    { path: 'about', component: AboutComponent },
    { path: '**', pathMatch: 'full', redirectTo: 'home'}
];

export const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);

-en el archivo "app.module.ts", se añaden los servicios que van a usarse, en la parte que se declara la lista "providers"

-Para usar las variables del servicio, en el caso de heroes.service; se puede acceder de dos formas;
1. si esta dentro de la etiqueta HTML, se puede hacer de dos formas: poner el objeto.atributo, y a la vez toca poner el atributo dentro de corchetes, ejemplo: <img [src]="heroe.img" class="card-img-top img-fluid" [alt]="heroe.nombre">
o hacerlo como en el segundo paso.
2. si esta por fuera de la etiqueta, tiene que ser con doble {{}}, ejemplo: {{heroe.nombre}} // <p class="card-text">{{ heroe.bio }}</p> 